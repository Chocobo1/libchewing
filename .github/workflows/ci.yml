name: CI

on:
  push:
    branches: [ "master", "staging", "trying" ]
  pull_request:
    branches: [ "master" ]
  merge_group:
    types: [checks_requested]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CMAKE_GENERATOR: Ninja

jobs:
  build:
    continue-on-error: ${{ matrix.os == 'windows-latest' }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        with_rust: ['true', 'false']
        rust_version: ['1.70']
        include:
          - os: ubuntu-latest
            with_rust: true
            rust_version: stable
        exclude:
          - with_rust: 'false'
            rust_version: 'stable'
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}, with_rust=${{ matrix.with_rust }}, rust_version=${{ matrix.rust_version }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt-get install ninja-build
    - if: ${{ matrix.os == 'macos-latest' }}
      run: brew install ninja
    - if: ${{ matrix.os == 'windows-latest' }}
      run: choco install ninja
    - if: ${{ matrix.os == 'windows-latest' }}
      uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756

    - name: Setup rustup
      run: |
        rustup default ${{ matrix.rust_version }}
        rustup update

    - name: Build
      run: cargo xtask build --build-type ${{env.BUILD_TYPE}} --with-rust ${{matrix.with_rust}} --verbose true

    - name: Test
      run: cargo xtask test --build-type ${{env.BUILD_TYPE}}

  build_with_hash:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - run: sudo apt-get install ninja-build

    - name: Build
      run: cargo xtask build --build-type ${{env.BUILD_TYPE}} --with-rust false --with-hash true --verbose true

    - name: Test
      run: cargo xtask test --build-type ${{env.BUILD_TYPE}}

  coverage:
    strategy:
      matrix:
        with_rust: ['true', 'false']
    runs-on: ubuntu-latest
    name: Coverage with_rust=${{ matrix.with_rust }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - run: sudo apt-get install ninja-build

    - name: Setup rustup
      run: |
        rustup default stable
        rustup update
        rustup component add llvm-tools

    - name: Setup grcov
      run: |
        curl -LO https://github.com/mozilla/grcov/releases/download/v0.8.19/grcov-x86_64-unknown-linux-gnu.tar.bz2
        echo 098be4d60b8016913542d58456fea6e771890096d1bf86e7f83dac650ba4b58a grcov-x86_64-unknown-linux-gnu.tar.bz2 | sha256sum -c -
        tar xf grcov-x86_64-unknown-linux-gnu.tar.bz2

    - name: Build
      env:
        CC: clang
      run: cargo xtask build --build-type Debug --with-rust ${{matrix.with_rust}} --with-coverage true --verbose true

    - name: Test
      run: |
        cargo xtask test --build-type Debug
        ./grcov . -s . -b . --keep-only 'src/*' --llvm  -t lcov -o coverage.lcov

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
