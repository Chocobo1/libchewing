name: CI

on:
  push:
    branches: ["master", "staging", "trying"]
  pull_request:
    branches: ["master"]
  merge_group:
    types: [checks_requested]

env:
  RUST_VERSION: "1.70"
  CMAKE_GENERATOR: Ninja

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        preset:
          - rust-release
          - rust-with-sqlite-release
          - c99-release
          - c99-with-uhash-release
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}, preset=${{ matrix.preset }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"

      - if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install ninja-build
      - if: ${{ matrix.os == 'macos-latest' }}
        run: brew install ninja
      - if: ${{ matrix.os == 'windows-latest' }}
        run: choco install ninja
      - if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756

      - name: Setup rustup
        run: |
          rustup default ${{ env.RUST_VERSION }}
          rustup update

      - name: Build
        run: |
          cmake --preset ${{ matrix.preset }}
          cmake --build out/build/${{ matrix.preset }} --verbose
          cmake --install out/build/${{ matrix.preset }} --verbose

      - name: Test
        run: |
          cargo test
          ctest --test-dir out/build/${{ matrix.preset }} --verbose

  coverage:
    strategy:
      matrix:
        preset:
          - rust-coverage
          - rust-with-sqlite-coverage
          - c99-coverage
          - c99-with-uhash-coverage
    runs-on: ubuntu-latest
    name: Coverage preset=${{ matrix.preset }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"

      - run: sudo apt-get install ninja-build

      - name: Setup rustup
        run: |
          rustup default stable
          rustup update
          rustup component add llvm-tools

      - name: Setup grcov
        run: |
          curl -LO https://github.com/mozilla/grcov/releases/download/v0.8.19/grcov-x86_64-unknown-linux-gnu.tar.bz2
          echo 098be4d60b8016913542d58456fea6e771890096d1bf86e7f83dac650ba4b58a grcov-x86_64-unknown-linux-gnu.tar.bz2 | sha256sum -c -
          tar xf grcov-x86_64-unknown-linux-gnu.tar.bz2

      - name: Build
        run: |
          cmake --preset ${{ matrix.preset }}
          cmake --build out/build/${{ matrix.preset }} --verbose

      - name: Test
        run: |
          cargo test
          ctest --test-dir out/build/${{ matrix.preset }} --verbose
          ./grcov . -s . -b . --keep-only 'src/*' --llvm  -t lcov -o coverage.lcov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # https://github.com/orgs/community/discussions/26822
  results:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Final Results
    needs: [build]
    steps:
      - run: exit 1
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
